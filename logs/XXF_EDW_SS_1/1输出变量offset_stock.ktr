<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>1输出变量</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2015/12/17 15:51:23.278</created_date>
    <modified_user>-</modified_user>
    <modified_date>2015/12/17 15:51:23.278</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>IP	data_name	name	pas
192.168.21.59	XXF	sa	Sa123456</note>
      <xloc>864</xloc>
      <yloc>144</yloc>
      <width>259</width>
      <heigth>42</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>192.168.21.44_cn_sisyphe_ods</name>
    <server>192.168.21.44</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>cn_sisyphe_ods</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce10cc9da0ce</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>获取变量</from>
      <to>从结果获取记录</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>从结果获取记录</from>
      <to>Microsoft Excel 输出</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>获取变量</from>
      <to>写日志</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>表输入</from>
      <to>表输出</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Microsoft Excel 输出</name>
    <type>TypeExitExcelWriterStep</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <makeSheetActive>Y</makeSheetActive>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <startingCell>A1</startingCell>
    <appendOmitHeader>N</appendOmitHeader>
    <appendOffset>0</appendOffset>
    <appendEmpty>0</appendEmpty>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <forceFormulaRecalculation>N</forceFormulaRecalculation>
    <leaveExistingStylesUnchanged>N</leaveExistingStylesUnchanged>
    <appendLines>N</appendLines>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>C:\Users\Admin\Desktop\filexxxxxx.xls</name>
      <extention>xls</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <stream_data>N</stream_data>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <protected_by/>
      <splitevery>0</splitevery>
      <if_file_exists>new</if_file_exists>
      <if_sheet_exists>new</if_sheet_exists>
    </file>
    <template>
      <enabled>N</enabled>
      <sheet_enabled>N</sheet_enabled>
      <filename>template.xls</filename>
      <sheetname/>
      <hidden>N</hidden>
    </template>
    <fields>
      <field>
        <name>ip</name>
        <type>String</type>
        <format/>
        <title>ip</title>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>data_name</name>
        <type>String</type>
        <format/>
        <title>data_name</title>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>name</name>
        <type>String</type>
        <format/>
        <title>name</title>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
      <field>
        <name>pas</name>
        <type>String</type>
        <format/>
        <title>pas</title>
        <titleStyleCell/>
        <styleCell/>
        <commentField/>
        <commentAuthorField/>
        <formula>N</formula>
        <hyperlinkField/>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>512</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>从结果获取记录</name>
    <type>RowsFromResult</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>ip</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>data_name</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>name</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>pas</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>写日志</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage/>
    <fields>
      <field>
        <name>ip</name>
      </field>
      <field>
        <name>data_name</name>
      </field>
      <field>
        <name>name</name>
      </field>
      <field>
        <name>pas</name>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>获取变量</name>
    <type>GetVariable</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>ip</name>
        <variable>${IP}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>data_name</name>
        <variable>${DATA_NAME}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>name</name>
        <variable>${NAME}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>pas</name>
        <variable>${PAS}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>表输入</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>192.168.21.44_cn_sisyphe_ods</connection>
    <sql>select concat('YH', @num := @num + 1) as offset_id,
       a.*
from (
-- 零售
    select
                concat('YHMCJH', replace(begin_date, '-', ''))                             as batch_no,
                a.sale_order_code                                                          as bill_code,
                'SALE'                                                                     as bill_type,
                case sale_order_type when 'ORDER' then 'OUT_STORAGE' else 'IN_STORAGE' end as bill_purpose,
                new_station_code                                                           as from_location_code,
                new_station_name                                                           as from_location_name,
                category_code                                                              as from_location_type,
                'NORMAL'                                                                   as from_location_storage,
                null                                                                       as target_location_code,
                null                                                                       as target_location_name,
                null                                                                       as target_location_type,
                null                                                                       as target_location_storage,
                goods_code,
                abs(sale_amount)                                                           as amount,
                case sale_order_type when 'BACK_ORDER' then sale_real_price else null end  as inflow_price,
                case sale_order_type when 'ORDER' then sale_real_price else null end       as outflow_price,
                null                                                                       as related_bill_code,
                null                                                                       as remark,
                create_time,
                update_time,
                'SO'                                                                       as origin_bill_type,
                b.id                                                                       as origin_bill_id
         from cn_sisyphe_ods.test_data_center_sale_order_detail a
                  inner join cn_sisyphe_ods.test_data_center_sale_order b on a.sale_order_code = b.sale_order_code
                  inner join cn_sisyphe_dds.dds_station c
                             on b.station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  inner join cn_sisyphe_dds.finance_view d on date(b.create_time) = d.DATE
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'SO')
             union all
-- 批销
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              bill_purpose,
              case bill_purpose
                  when 'OUT_STORAGE' then d.new_station_code
                  when 'IN_STORAGE' then c.new_station_code
                  else null end as from_location_code,
              case bill_purpose
                  when 'OUT_STORAGE' then d.new_station_name
                  when 'IN_STORAGE' then c.new_station_name
                  else null end as from_location_name,
              case bill_purpose
                  when 'OUT_STORAGE' then d.category_code
                  when 'IN_STORAGE' then c.category_code
                  else null end as from_location_type,
              case bill_purpose
                  when 'OUT_STORAGE' then f.storage_code
                  when 'IN_STORAGE' then e.storage_code
                  else null end as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              goods_code,
              abs(actual_total_amount) as amount,
              case bill_purpose when 'IN_STORAGE' then price * discount else null end as inflow_price,
              case bill_purpose when 'OUT_STORAGE' then price * discount else null end as outflow_price,
              null as related_bill_code,
              null as remark,
              create_time,
              update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'BATCH_SALE'
             union all
-- 进货
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              bill_purpose,
              new_station_code as from_location_code,
              new_station_name as from_location_name,
              category_code as from_location_type,
              storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              goods_code,
              abs(actual_total_amount) as amount,
              price * discount as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              create_time,
              update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  inner join cn_sisyphe_dds.dds_station c
                             on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  inner join cn_sisyphe_dds.dds_storage d on a.in_storage_code = d.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view e on date(b.create_time) = e.DATE
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'PURCHASE'
             union all
-- 退货
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              bill_purpose,
              new_station_code as from_location_code,
              new_station_name as from_location_name,
              category_code as from_location_type,
              storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              price * discount as outflow_price,
              null as related_bill_code,
              null as remark,
              create_time,
              update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  inner join cn_sisyphe_dds.dds_station c
                             on b.out_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  inner join cn_sisyphe_dds.dds_storage d on a.out_storage_code = d.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view e on date(b.create_time) = e.DATE
             where
              bill_type = 'RETURNED' and create_time
             union all
-- 配送
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              c.new_station_code as target_location_code,
              c.new_station_name as target_location_name,
              c.category_code as target_location_type,
              e.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              case c.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'DELIVERY'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              d.new_station_code as target_location_code,
              d.new_station_name as target_location_name,
              d.category_code as target_location_type,
              f.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              case c.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'DELIVERY'
             union all
-- 退库
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              c.new_station_code as target_location_code,
              c.new_station_name as target_location_name,
              c.category_code as target_location_type,
              e.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              case d.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'RESTOCK'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              d.new_station_code as target_location_code,
              d.new_station_name as target_location_name,
              d.category_code as target_location_type,
              f.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              case d.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'RESTOCK'
             union all
-- 调剂
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              c.new_station_code as target_location_code,
              c.new_station_name as target_location_name,
              c.category_code as target_location_type,
              e.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              case
                  when d.category_code_flow = 'LOGISTICS' and c.category_code_flow = 'LOGISTICS' then cost_price
                  else price * 0.62 end as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'ADJUST'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              d.new_station_code as target_location_code,
              d.new_station_name as target_location_name,
              d.category_code as target_location_type,
              f.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              case
                  when d.category_code_flow = 'LOGISTICS' and c.category_code_flow = 'LOGISTICS' then cost_price
                  else price * 0.62 end as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'ADJUST'
             union all
-- 调拨
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              c.new_station_code as target_location_code,
              c.new_station_name as target_location_name,
              c.category_code as target_location_type,
              e.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              case d.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'ALLOT'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              d.new_station_code as target_location_code,
              d.new_station_name as target_location_name,
              d.category_code as target_location_type,
              f.storage_code as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              case d.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'ALLOT'
             union all
-- 盘点
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              case d.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'PICKING_MISTAKE' and
              bill_purpose = 'OUT_STORAGE'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              case c.category_code_flow
                  when 'BOOKSTORE' then price * 0.62
                  when 'LOGISTICS' then cost_price
                  else null end as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'PICKING_MISTAKE' and
              bill_purpose = 'IN_STORAGE'
             union all
-- 赠送
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'OUT_STORAGE' as bill_purpose,
              d.new_station_code as from_location_code,
              d.new_station_name as from_location_name,
              d.category_code as from_location_type,
              f.storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              null as inflow_price,
              price * discount as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'PRESENT' and
              bill_purpose = 'OUT_STORAGE'
             union all
             select
              concat('YHMCJH', replace(begin_date, '-', '')) as batch_no,
              a.bill_code as bill_code,
              bill_type,
              'IN_STORAGE' as bill_purpose,
              c.new_station_code as from_location_code,
              c.new_station_name as from_location_name,
              c.category_code as from_location_type,
              e.storage_code as from_location_storage,
              null as target_location_code,
              null as target_location_name,
              null as target_location_type,
              null as target_location_storage,
              a.goods_code,
              abs(actual_total_amount) as amount,
              price * discount as inflow_price,
              null as outflow_price,
              null as related_bill_code,
              null as remark,
              b.create_time,
              b.update_time,
              'BI' as origin_bill_type,
              b.id as origin_bill_id
             from
              cn_sisyphe_ods.test_data_center_bill_detail a
                  inner join cn_sisyphe_ods.test_data_center_bill b on a.bill_code = b.bill_code
                  left join cn_sisyphe_dds.dds_station c
                            on b.in_station_code = c.yh_station_code and c.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_station d
                            on b.out_station_code = d.yh_station_code and d.bookstore_system = 'YH'
                  left join cn_sisyphe_dds.dds_storage e on a.in_storage_code = e.yh_storage_code
                  left join cn_sisyphe_dds.dds_storage f on a.out_storage_code = f.yh_storage_code
                  inner join cn_sisyphe_dds.finance_view g on date(b.create_time) = g.DATE
                  left join cn_sisyphe_ods.test_offset_batch h
                            on a.goods_code = h.goods_code and
                               h.batch_no = concat('YHMCJH', replace(begin_date, '-', ''))
             where
              b.id not in (select origin_bill_id
                           from cn_sisyphe_ods.test_offset_offset where origin_bill_type = 'BI') and
              bill_type = 'PRESENT' and
              bill_purpose = 'IN_STORAGE'
     ) a, (select @num := 0) b;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>表输出</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>192.168.21.44_cn_sisyphe_ods</connection>
    <schema/>
    <table>test_offset_stock</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>512</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
